{"version":3,"file":"static/js/168.15030139.chunk.js","mappings":"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","sources":["Pages/MovieDetails/MovieDetails.styled.js","Pages/MovieDetails/MovieDetails.jsx","components/Api/Api.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WrapFilm = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  gap: 20px;\n  min-width: 320px;\n  padding: 20px;\n  margin-top: 80px;\n  padding: 20px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const WrapPic = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 300px;\n  margin: 0 0 20px 0;\n  @media screen and (min-width: 600px) {\n    width: 400px;\n  }\n  .back {\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    justify-content: center;\n    width: 100px;\n    height: 20px;\n    border-radius: 10px;\n    background-color: #a9a9a9;\n    color: #a9a9a9;\n    font-family: 'Prompt', sans-serif;\n    font-size: 14px;\n    font-weight: 700;\n    padding: 0;\n    margin: 10px 0 20px 0;\n    cursor: pointer;\n    &:hover,\n    :focus {\n      background-color: #a9a9a9;\n      color: #0e1841;\n    }\n  }\n`;\n\nexport const Poster = styled.img`\n  display: block;\n  width: 300px;\n  height: 450px;\n  object-fit: cover;\n  margin: 0;\n  @media screen and (min-width: 600px) {\n    width: 400px;\n    height: 600px;\n  }\n`;\n\nexport const WrapInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-width: 320px;\n  margin: 100px 40px 40px 40px;\n  @media screen and (min-width: 600px) {\n    min-width: 420px;\n  }\n  @media screen and (min-width: 900px) {\n    justify-content: flex-start;\n    align-items: center;\n    width: 440px;\n  }\n`;\n\nexport const TitleFilm = styled.h2`\n  font-family: 'Prompt', sans-serif;\n  display: block;\n  font-size: 28px;\n  font-weight: 700;\n  margin: 0 0 20px 0;\n  color: #0e1841;\n`;\n\nexport const Score = styled.h3`\n  font-family: 'Prompt', sans-serif;\n  font-size: 24px;\n  font-weight: 700;\n  margin: 0 0 20px 0;\n  color: #0e1841;\n`;\n\nexport const TitleOverview = styled.h3`\n  font-family: 'Prompt', sans-serif;\n  font-size: 24px;\n  font-weight: 700;\n  margin: 0 0 20px 0;\n  color: #0e1841;\n`;\n\nexport const TextOverview = styled.p`\n  font-family: 'Prompt', sans-serif;\n  font-size: 16px;\n  font-weight: 500;\n  padding: 0;\n  margin: 0 0 20px 0;\n  color: #0e1841;\n`;\n\nexport const TitleGenres = styled.h3`\n  font-family: 'Prompt', sans-serif;\n  font-size: 24px;\n  font-weight: 700;\n  margin: 0 0 20px 0;\n  color: #0e1841;\n`;\n\nexport const WrappGeners = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  min-width: 320px;\n  @media screen and (min-width: 600px) {\n    min-width: 420px;\n  }\n  @media screen and (min-width: 900px) {\n    width: 440px;\n  }\n`;\n\nexport const Genre = styled.li`\n  font-family: 'Prompt', sans-serif;\n  font-size: 20px;\n  font-weight: 400;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const WrapPlus = styled.div`\n  display: flex;\n  align-items: center;\n  min-width: 320px;\n`;\n\nexport const WrapLinkPlus = styled.nav`\n  display: flex;\n  align-items: flex-start;\n  width: 320px;\n  height: 40px;\n  gap: 20px;\n  margin-bottom: 20px;\n  padding-top: 100px;\n\n  .navigate {\n    font-family: 'Prompt', sans-serif;\n    font-size: 24px;\n    font-weight: 700;\n    color: #0e1841;\n    text-decoration: none;\n    transition: all 0.3s;\n    cursor: pointer;\n\n    &.active {\n      color: #2f4f4f;\n    }\n    &:hover,\n    :focus {\n      color: #2f4f4f;\n    }\n  }\n`;\n\nexport const WrapCast = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const ItemCast = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 200px;\n`;\n\nexport const Profile = styled.img`\n  display: block;\n  width: 200px;\n  height: 300px;\n  object-fit: cover;\n`;\n\nexport const ActorName = styled.h4`\n  font-family: 'Prompt', sans-serif;\n  font-size: 20px;\n  font-weight: 500;\n  color: #0e1641;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const Character = styled.h4`\n  font-family: 'Prompt', sans-serif;\n  font-size: 16px;\n  font-weight: 400;\n  color: #0e1641;\n  margin: 0;\n  padding: 0;\n`;\n","import React, { Suspense, useRef } from 'react';\nimport { useEffect, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { fetchMovieDetails } from '../../components/Api/Api';\nimport {\n  Genre,\n  Poster,\n  Score,\n  TextOverview,\n  TitleFilm,\n  TitleGenres,\n  TitleOverview,\n  WrapFilm,\n  WrapInfo,\n  WrapLinkPlus,\n  WrapPic,\n  WrapPlus,\n  WrappGeners,\n} from './MovieDetails.styled';\nimport { Loading } from 'components/Loader/Loader';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backHref = useRef(location.state?.from ?? '/');\n  const [film, setFilm] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const getMovieDetails = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchMovieDetails(movieId);\n        setFilm(data);\n      } catch (error) {\n        error(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovieDetails();\n  }, [movieId]);\n\n  if (!film) return;\n  return (\n    <WrapFilm id={film.id}>\n      {isLoading && <Loading />}\n      <WrapPic>\n        <Link to={backHref.current} className=\"back\">\n          Back\n        </Link>\n        <Poster\n          src={`https://image.tmdb.org/t/p/w500/${film.poster_path}`}\n          alt=\"poster\"\n        />\n      </WrapPic>\n\n      <WrapInfo>\n        <TitleFilm>\n          {film.title} {new Date(film.release_date).getFullYear()}\n        </TitleFilm>\n        <Score>User Score: {Math.ceil(film.vote_average * 10)}%</Score>\n        <TitleOverview>Overview</TitleOverview>\n        <TextOverview>{film.overview}</TextOverview>\n        <TitleGenres>Genres</TitleGenres>\n        <WrappGeners>\n          {film.genres.map(({ id, name }) => {\n            return <Genre key={id}>{name}</Genre>;\n          })}\n        </WrappGeners>\n      </WrapInfo>\n\n      <WrapPlus>\n        <WrapLinkPlus>\n          <NavLink className=\"navigate\" to=\"cast\">\n            Cast\n          </NavLink>\n          <NavLink className=\"navigate\" to=\"reviews\">\n            Reviews\n          </NavLink>\n        </WrapLinkPlus>\n\n        <Suspense fallback={<Loading />}>\n          <Outlet />\n        </Suspense>\n      </WrapPlus>\n    </WrapFilm>\n  );\n}\n","import axios from 'axios';\n\nconst keyUrl = '9ac8dc50828ed4aa0cb37be4516a48d0';\n\nexport async function fetchMovies() {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n      {\n        params: {\n          api_key: keyUrl,\n        },\n      }\n    );\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchFindMovie(query) {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/search/movie',\n      {\n        params: {\n          query: `${query}`,\n          include_adult: false,\n          language: 'en-US',\n          page: 1,\n          api_key: keyUrl,\n        },\n      }\n    );\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}`,\n      {\n        params: {\n          api_key: keyUrl,\n          language: 'en-US',\n        },\n      }\n    );\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchCredits(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n      {\n        params: {\n          api_key: keyUrl,\n          language: 'en-US',\n        },\n      }\n    );\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n      {\n        params: {\n          api_key: keyUrl,\n          language: 'en-US',\n        },\n      }\n    );\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import { styled } from 'styled-components';\nexport const LoaderWrap = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 90;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(46, 47, 66, 0.4);\n`;\n\nexport const Loader = styled.span`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  width: 175px;\n  height: 80px;\n  background: #249fa3;\n  border-radius: 10px;\n  font-family: Arial, sans-serif;\n  font-size: 20px;\n  font-weight: 600;\n  color: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import React from 'react';\nimport { Loader, LoaderWrap } from './Loader.styled';\n\nexport function Loading() {\n  return (\n    <LoaderWrap>\n      <Loader />\n    </LoaderWrap>\n  );\n}\n"],"names":["WrapFilm","styled","_templateObject","_taggedTemplateLiteral","WrapPic","_templateObject2","Poster","_templateObject3","WrapInfo","_templateObject4","TitleFilm","_templateObject5","Score","_templateObject6","TitleOverview","_templateObject7","TextOverview","_templateObject8","TitleGenres","_templateObject9","WrappGeners","_templateObject10","Genre","_templateObject11","WrapPlus","_templateObject12","WrapLinkPlus","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","MovieDetails","_location$state$from","_location$state","movieId","useParams","location","useLocation","backHref","useRef","state","from","_useState","useState","_useState2","_slicedToArray","film","setFilm","_useState3","_useState4","isLoading","setIsLoading","useEffect","getMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchMovieDetails","sent","t0","message","finish","stop","apply","arguments","_jsxs","id","children","_jsx","Loading","Link","to","current","className","src","concat","poster_path","alt","title","Date","release_date","getFullYear","Math","ceil","vote_average","overview","genres","map","_ref2","name","NavLink","Suspense","fallback","Outlet","keyUrl","fetchMovies","_fetchMovies","response","axios","params","api_key","abrupt","console","error","fetchFindMovie","_x","_fetchFindMovie","_callee2","query","_context2","include_adult","language","page","_x2","_fetchMovieDetails","_callee3","_context3","fetchCredits","_x3","_fetchCredits","_callee4","_context4","fetchReviews","_x4","_fetchReviews","_callee5","_context5","LoaderWrap","Loader"],"sourceRoot":""}