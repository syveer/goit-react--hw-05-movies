{"version":3,"file":"static/js/387.ce24b890.chunk.js","mappings":"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","sources":["components/Api/Api.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst keyUrl = '9ac8dc50828ed4aa0cb37be4516a48d0';\n\nexport async function fetchMovies() {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n      {\n        params: {\n          api_key: keyUrl,\n        },\n      }\n    );\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchFindMovie(query) {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/search/movie',\n      {\n        params: {\n          query: `${query}`,\n          include_adult: false,\n          language: 'en-US',\n          page: 1,\n          api_key: keyUrl,\n        },\n      }\n    );\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}`,\n      {\n        params: {\n          api_key: keyUrl,\n          language: 'en-US',\n        },\n      }\n    );\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchCredits(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n      {\n        params: {\n          api_key: keyUrl,\n          language: 'en-US',\n        },\n      }\n    );\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n      {\n        params: {\n          api_key: keyUrl,\n          language: 'en-US',\n        },\n      }\n    );\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import styled from 'styled-components';\n\nexport const WrapCast = styled.ul`\n  gap: 20px;\n  margin: 0 0 20px 0;\n  padding: 0;\n\n  @media screen and (min-width: 900px) {\n    width: 900px;\n    height: 600px;\n    overflow-y: scroll;\n    scroll-behavior: smooth;\n  }\n\n  @media screen and (min-width: 1400px) {\n    width: 480px;\n    height: 600px;\n  }\n`;\n\nexport const ItemCast = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 200px;\n`;\n\nexport const Profile = styled.img`\n  display: block;\n  width: 200px;\n  height: 300px;\n  object-fit: cover;\n`;\n\nexport const ActorName = styled.h4`\n  font-size: 20px; /* Am eliminat font-family și font-weight pentru a folosi valorile implicite ale stilului h4 */\n  color: #333;\n  margin: 0;\n`;\n\nexport const Character = styled.h4`\n  font-size: 16px; /* Am eliminat font-family și font-weight pentru a folosi valorile implicite ale stilului h4 */\n  color: #555;\n  margin: 0;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCredits } from '../Api/Api';\nimport {\n  ActorName,\n  Character,\n  ItemCast,\n  Profile,\n  WrapCast,\n} from './Cast.styled';\nimport { Loading } from '../Loader/Loader';\n\nconst defaultImg = 'https://www.istockphoto.com/ro/fotografii/film-slate';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const getCast = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchCredits(movieId);\n        setCast(data.cast);\n      } catch (error) {\n        error(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getCast();\n  }, [movieId]);\n\n  if (!cast) return;\n\n  const showCast = Array.isArray(cast) && cast.length;\n\n  return (\n    <>\n      {isLoading && <Loading />}\n      <WrapCast>\n        {showCast &&\n          cast.map(({ id, profile_path, name, character }) => {\n            return (\n              <ItemCast key={id}>\n                <Profile\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                      : defaultImg\n                  }\n                  alt={name}\n                />\n                <ActorName>{name}</ActorName>\n                <Character>{character}</Character>\n              </ItemCast>\n            );\n          })}\n      </WrapCast>\n    </>\n  );\n}\n","import { styled } from 'styled-components';\nexport const LoaderWrap = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 90;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(46, 47, 66, 0.4);\n`;\n\nexport const Loader = styled.span`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  width: 175px;\n  height: 80px;\n  background: #249fa3;\n  border-radius: 10px;\n  font-family: Arial, sans-serif;\n  font-size: 20px;\n  font-weight: 600;\n  color: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import React from 'react';\nimport { Loader, LoaderWrap } from './Loader.styled';\n\nexport function Loading() {\n  return (\n    <LoaderWrap>\n      <Loader />\n    </LoaderWrap>\n  );\n}\n"],"names":["keyUrl","fetchMovies","_fetchMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","response","data","_context","prev","next","axios","params","api_key","sent","abrupt","t0","console","error","stop","fetchFindMovie","_x","_fetchFindMovie","_callee2","query","_context2","concat","include_adult","language","page","fetchMovieDetails","_x2","_fetchMovieDetails","_callee3","movieId","_context3","fetchCredits","_x3","_fetchCredits","_callee4","_context4","fetchReviews","_x4","_fetchReviews","_callee5","_context5","WrapCast","styled","_templateObject","_taggedTemplateLiteral","ItemCast","_templateObject2","Profile","_templateObject3","ActorName","_templateObject4","Character","_templateObject5","Cast","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","isLoading","setIsLoading","useEffect","getCast","_ref","message","finish","showCast","Array","isArray","length","_jsxs","_Fragment","children","_jsx","Loading","map","_ref2","id","profile_path","name","character","src","alt","LoaderWrap","Loader"],"sourceRoot":""}